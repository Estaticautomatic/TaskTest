# TaskForge Docker Compose Configuration
# Complete self-hosted task management system

version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskforge-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_PATH=/app/data/taskforge.db
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-key-in-production}
      - JWT_EXPIRY=7d
      - FRONTEND_URL=http://localhost
    volumes:
      # Persist database file
      - ./data:/app/data
    networks:
      - taskforge-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:3001/api
    container_name: taskforge-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - taskforge-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Optional: Nginx Reverse Proxy (for production with SSL)
  # Uncomment to use nginx as reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: taskforge-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - taskforge-network

networks:
  taskforge-network:
    driver: bridge

volumes:
  data:
    driver: local